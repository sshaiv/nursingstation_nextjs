


import React, { useEffect, useState } from 'react';
import axios from 'axios';
import TableReuse from '@/app/common/TableReuse';

export default function SelectBatchModal({ onClose, selectedStore, selectedData, itemId }) {
  const [itemCharge, setItemCharge] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchItemCharge = async () => {
      if (!itemId || !selectedStore) return; // Ensure itemId and selectedStore are valid

      try {
        const response = await axios.get(`https://doctorapi.medonext.com/api/HMS/getItemCharge?itemid=${itemId}&storeid=${selectedStore}`);
        console.log('API Response:', response.data); // Log the response
        setItemCharge(response.data.Table || []); // Safely access the Table key
      } catch (error) {
        setError(error.message);
      } finally {
        setLoading(false);
      }
    };

    fetchItemCharge();
  }, [itemId, selectedStore]); // Add itemId to the dependency array

  if (loading) {
    return <div>Loading...</div>;
  }

  if (error) {
    return <div>Error: {error}</div>;
  }

  if (!itemCharge.length) {
    return <div>No data available for the selected store.</div>;
  }

  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center backdrop-blur-xs bg-black/30">
      <div className="w-[95vw] max-w-6xl rounded-md border shadow-lg bg-white p-3 text-xs font-sans">
        {/* Header */}
        <div className="bg-green-100 text-green-800 text-center font-semibold py-2 rounded-t-md text-[13px]">
          Batch Series
        </div>

        {/* Table */}
        <div className="overflow-x-auto p-4">
          <table className="min-w-full text-sm border border-gray-300">
            <thead className="bg-blue-900 text-black text-center">
              <tr>
                <TableReuse type="th">S.No </TableReuse>
                <TableReuse type="th">Batch No </TableReuse>
                <TableReuse type="th">Sale Rate </TableReuse>
                <TableReuse type="th">Expiry date </TableReuse>
                <TableReuse type="th">Select </TableReuse>
                <TableReuse type="th">Avail. Qty </TableReuse>
                <TableReuse type="th">CGST% </TableReuse>
                <TableReuse type="th">SGST% </TableReuse>
                <TableReuse type="th">IGST% </TableReuse>
              </tr>
            </thead>
            <tbody className="text-center bg-gray-50">
              {itemCharge.map((row, index) => (
                <tr key={index}>
                  <TableReuse>{index + 1} </TableReuse>
                  <TableReuse>{row.batchserialno} </TableReuse>
                  <TableReuse>{row.salerate} </TableReuse>
                  <TableReuse>{row.expirydate} </TableReuse>
                  <TableReuse>
                    <input type="checkbox" />
                  </TableReuse>
                  <TableReuse>{row.availqty} </TableReuse>
                  <TableReuse>{row.cgstper} </TableReuse>
                  <TableReuse>{row.sgstper} </TableReuse>
                  <TableReuse>{row.igstper} </TableReuse>
                </tr>
              ))}
            </tbody>
          </table>
        </div>

        {/* Close Button */}
        <div className="flex justify-center mt-2">
          <button
            onClick={onClose}
            className="bg-blue-700 hover:bg-blue-800 text-white text-xs font-semibold px-6 py-1.5 rounded"
          >
            Close
          </button>
        </div>
      </div>
    </div>
  );
}
